<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.baby.dao.BabyMapper">


	<!-- 회원가입시 인서트 -->
	<insert id="signup" parameterType="kr.baby.dao.MemberVO" useGeneratedKeys="true">
	 insert into 
	 member(mem_id, mem_pw, mem_name, mem_nick, mem_birth, mem_gender, mem_type, mem_tel, mem_joindate)
	values( #{mem_id},#{mem_pw},#{mem_name},#{mem_nick},#{mem_birth},#{mem_gender},#{mem_type},#{mem_tel},sysdate) <!--  ? >> 파라메터 매겨변수를 #{}로 표시-->
	</insert>
	
	
	<!-- 로그인 -->
	<select id = "memberLogin" resultType="kr.baby.dao.MemberVO" parameterType="kr.baby.dao.MemberVO">
	  select * from member 
	  where mem_id=#{mem_id} and mem_pw=#{mem_pw}
	</select>
	

<!--번호라도 붙여서 하는거 어떰 아니면 news 1. 이런식으로 구분 바로 되게 ㅇㅇ  -->

<!-- news 1. 뉴스 게시판 전체 리스트  -->
	<select id = "listNews" resultType = "kr.baby.dao.NewsVO">
	select * from NEWS
	order by nn_seq desc
	</select>


<!-- free 1. 자유 게시판 전체 리스트  -->
	<select id = "listFree" resultType = "kr.baby.dao.CommunityVO">
	select * from community
	order by community_seq desc
	</select>
	
<!-- free 2. 자유 게시판 글쓰기  -->
	<insert id="insertFree" parameterType="kr.baby.dao.CommunityVO">
	insert into community(community_seq,community_title,community_content,community_date,community_file,community_cnt,community_type,mem_id)
	values(community_seq.nextval,#{community_title},#{community_content},#{community_date},#{community_file},#{community_cnt},#{community_type},#{mem_id})
	</insert>
	
<!-- free 3. 자유 게시판 카운트업데이트  -->
	<update id="countFree" parameterType="int">
		update community set community_cnt = community_cnt+1 where community_seq = #{community_seq}
	</update>
	
<!-- free 4. 자유 게시판 글삭제  -->	
	<delete id="deleteFree">
	delete from community where community_seq=#{community_seq}
	</delete>
	
<!-- free 5. 자유 게시판 글수정  -->	
	<update id="updateFree" parameterType="kr.baby.dao.CommunityVO">
		update community set community_title=#{community_title},set community_content=#{community_content} where community_seq = #{community_seq}
		</update>
		
	<!-- free 6. 자유 게시판 상세 페이지   -->
	<select id = "getCommunity_seq" parameterType = "int" resultType="kr.baby.dao.CommunityVO">
	select * from community where community_seq=#{community_seq}
	</select>
	

<!-- info 1. 정보 게시판 전체 리스트  -->
	<select id = "listInfo" resultType = "kr.baby.dao.CommunityVO">
	select * from community
	order by community_seq desc
	</select>
	
<!-- free 2. 정보 게시판 글쓰기  -->
	<insert id="insertInfo" parameterType="kr.baby.dao.CommunityVO">
	insert into community(community_seq,community_title,community_content,community_date,community_file,community_cnt,community_type,mem_id)
	values(community_seq.nextval,#{community_title},#{community_content},#{community_date},#{community_file},#{community_cnt},#{community_type},#{mem_id})
	</insert>
	
<!-- free 3. 정보 게시판 카운트업데이트  -->
	<update id="countInfo" parameterType="int">
		update community set community_cnt = community_cnt+1 where community_seq = #{community_seq}
	</update>
	
<!-- free 4. 정보 게시판 글삭제  -->	
	<delete id="deleteInfo">
	delete from community where community_seq=#{community_seq}
	</delete>
	
<!-- free 5. 정보 게시판 글수정  -->	
	<update id="updateInfo" parameterType="kr.baby.dao.CommunityVO">
	update community set community_title=#{community_title},set community_content=#{community_content} where community_seq = #{community_seq}
	</update>

<!-- Trade 1. 거래 게시판 전체 리스트  -->
	<select id = "listTrade" resultType = "kr.baby.dao.TradeVO">
	select * from trade
	order by trade_seq desc
	</select>

<!-- Trade 2. 거래 게시판 글쓰기  -->
	<insert id="insertTrade" parameterType="kr.baby.dao.TradeVO">
	insert into trade(trade_seq,trade_title,trade_content,trade_date,trade_file,trade_cnt,trade_type,mem_id)
	values(trade_seq.nextval,#{trade_title},#{trade_content},#{trade_date},#{trade_file},#{trade_cnt},#{trade_type},#{mem_id})
	</insert>
	
<!-- Trade 3. 거래 게시판 카운트업데이트  -->
	<update id="countTrade" parameterType="int">
	update trade set trade_cnt = trade_cnt+1 where trade_seq = #{trade_seq}
	</update>
	
<!-- Trade 4. 거래 게시판 글삭제  -->	
	<delete id="deleteTrade">
	delete from trade where trade_seq=#{trade_seq}
	</delete>
	
<!-- Trade 5. 거래 게시판 글수정  -->	
	<update id="updateTrade" parameterType="kr.baby.dao.TradeVO">
	update trade set trade_title=#{trade_title},set trade_content=#{trade_content} where trade_seq = #{trade_seq}
	</update>
	

<!-- Diary 1. 일기 게시판 전체 리스트  -->
	<select id = "listDiary" resultType = "kr.baby.dao.DiaryVO">
	select * from diary
	order by diary_seq desc
	</select>

<!-- Diary 2. 일기 게시판 글쓰기  -->
	<insert id="insertDiary" parameterType="kr.baby.dao.DiaryVO">
	insert into diary(diary_seq,diary_title,diary_content,diary_date,diary_file,mem_id)
	values(diary_seq.nextval,#{diary_title},#{diary_content},sysdate,#{diary_file,jdbcType=VARCHAR},#{mem_id})
	</insert>
	

<!-- Diary 3. 일기 게시판 카운트업데이트  -->
	<update id="countDiary" parameterType="int">
	update diary set diary_cnt = diary_cnt+1 where diary_seq = #{diary_seq}
	</update>
	

	
<!-- Diary 4. 일기게시판 글삭제  -->	
	<delete id="deleteDiary">
	delete from diary where diary_seq=#{diary_seq}
	</delete>
	
<!-- Diary 5. 일기 게시판 글수정  -->	
	<update id="updateDiary" parameterType="kr.baby.dao.DiaryVO">
	update diary set diary_title=#{diary_title},set diary_content=#{diary_content} where diary_seq = #{diary_seq}
	</update>
	
	<!--Diary 6. 일기 게시판 상세 페이지   -->
	<select id = "getDiary_seq" parameterType = "int" resultType="kr.baby.dao.DiaryVO">
	select * from diary where diary_seq=#{diary_seq}
	</select>
	
	
</mapper>