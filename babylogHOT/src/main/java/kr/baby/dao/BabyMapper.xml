<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.baby.dao.BabyMapper">


	<!-- 회원가입시 인서트 -->
	<insert id="signup" parameterType="kr.baby.dao.MemberVO" useGeneratedKeys="true">
	 insert into 
	 member(mem_id, mem_pw, mem_name, mem_nick, mem_birth, mem_gender, mem_type, mem_tel, mem_joindate)
	values( #{mem_id},#{mem_pw},#{mem_name},#{mem_nick},#{mem_birth},#{mem_gender},#{mem_type},#{mem_tel},sysdate) <!--  ? >> 파라메터 매겨변수를 #{}로 표시-->
	</insert>
	
	<insert id ="kakaosignup" parameterType="kr.baby.dao.MemberVO">
	insert into
	member(mem_id, mem_nick)
	values(#{mem_id},#{mem_nick})
	</insert>
	
	<!-- 프로필 사진 마이페이지 -->
	<update id = "updateprof" parameterType="kr.baby.dao.MemberVO">
	update member set mem_prof = #{mem_prof},mem_ment = #{mem_ment}
	where mem_id = #{mem_id}
	</update>
	
	
	<!-- 로그인 -->
	<select id = "memberLogin" resultType="kr.baby.dao.MemberVO" parameterType="kr.baby.dao.MemberVO">
	  select * from member 
	  where mem_id=#{mem_id} and mem_pw=#{mem_pw}
	</select>
	

<!--번호라도 붙여서 하는거 어떰 아니면 news 1. 이런식으로 구분 바로 되게 ㅇㅇ  -->

<!-- news 1. 뉴스 게시판 전체 리스트  -->
	<select id = "listNews" resultType = "kr.baby.dao.NewsVO">
	select * from NEWS
	order by nn_seq desc
	</select>


<!-- news 2. 뉴스 게시판 글쓰기 -->
<select id = "insertNews" parameterType = "kr.baby.dao.NewsVO">
	insert into news(nn_seq,nn_title,nn_content,nn_file,nn_date,admin_id)
	values(news_seq.nextval,#{nn_title},#{nn_content},#{nn_file,jdbcType=VARCHAR},sysdate,'admin@babylog.com')
</select>

<!-- news 3. 뉴스 디테일   -->
<select id = "detailNews" parameterType = "int" resultType="kr.baby.dao.NewsVO">
	select * from news where nn_seq=#{nn_seq}
</select>

<!-- news 4. 뉴스 조회수 -->
	<update id="countNews" parameterType="int">
		update news set nn_cnt = nn_cnt+1 where nn_seq = #{nn_seq}
	</update>

<!-- free 1. 자유 게시판 전체 리스트  -->
	<select id = "listFree" resultType = "kr.baby.dao.CommunityVO">
	select * from community
	order by community_seq desc
	</select>
	
<!-- free 2. 자유 게시판 글쓰기  -->
	<insert id="insertFree" parameterType="kr.baby.dao.CommunityVO">
	insert into community(community_seq,community_title,community_content,community_date,community_file,community_type,mem_id,mem_nick)
	values(community_seq.nextval,#{community_title},#{community_content},sysdate,#{community_file,jdbcType=VARCHAR},#{community_type},#{mem_id},#{mem_nick})
	</insert>
	
<!-- free 3. 자유 게시판 카운트업데이트  -->
	<update id="countFree" parameterType="int">
		update community set community_cnt = community_cnt+1 where community_seq = #{community_seq}
	</update>
	
<!-- free 4. 자유 게시판 글삭제  -->	
	<delete id="deleteFree">
	delete from community where community_seq=#{community_seq}
	</delete>
	
<!-- free 5. 자유 게시판 글수정  -->	
	<update id="updateFree" parameterType="kr.baby.dao.CommunityVO">
		update community set community_title=#{community_title},set community_content=#{community_content} where community_seq = #{community_seq}
		</update>
		
	<!-- free 6. 자유 게시판 상세 페이지   -->
	<select id = "getCommunity_seq" parameterType = "int" resultType="kr.baby.dao.CommunityVO">
	select * from community where community_seq=#{community_seq}
	</select>
	

<!-- info 1. 정보 게시판 전체 리스트  -->
	<select id = "listInfo" resultType = "kr.baby.dao.CommunityVO">
	select * from community
	order by community_seq desc
	</select>
	
<!-- free 2. 정보 게시판 글쓰기  -->
	<insert id="insertInfo" parameterType="kr.baby.dao.CommunityVO">
	insert into community(community_seq,community_title,community_content,community_date,community_file,community_type,mem_id,mem_nick)
	values(community_seq.nextval,#{community_title},#{community_content},sysdate,#{community_file,jdbcType=VARCHAR},#{community_type},#{mem_id},#{mem_nick})
	</insert>
	
<!-- free 3. 정보 게시판 카운트업데이트  -->
	<update id="countInfo" parameterType="int">
		update community set community_cnt = community_cnt+1 where community_seq = #{community_seq}
	</update>
	
<!-- free 4. 정보 게시판 글삭제  -->	
	<delete id="deleteInfo">
	delete from community where community_seq=#{community_seq}
	</delete>
	
<!-- free 5. 정보 게시판 글수정  -->	
	<update id="updateInfo" parameterType="kr.baby.dao.CommunityVO">
	update community set community_title=#{community_title},set community_content=#{community_content} where community_seq = #{community_seq}
	</update>

<!-- Trade 1. 거래 게시판 전체 리스트  -->
	<select id = "listTrade" resultType = "kr.baby.dao.CommunityVO">
	select * from community
	order by community_seq desc
	</select>
	

<!-- Trade 2. 거래 게시판 글쓰기  -->
	<insert id="insertTrade" parameterType="kr.baby.dao.CommunityVO">
	insert into community(community_seq,community_title,community_content,community_date,community_file,community_type,mem_id,mem_nick)
	values(community_seq.nextval,#{community_title},#{community_content},sysdate,#{community_file,jdbcType=VARCHAR},#{community_type},#{mem_id},#{mem_nick})
	
	</insert>
	
<!-- Trade 3. 거래 게시판 카운트업데이트  -->
	<update id="countTrade" parameterType="int">
	update community set community_cnt = community_cnt+1 where community_seq = #{community_seq}
	</update>
	
<!-- Trade 4. 거래 게시판 글삭제  -->	
	<delete id="deleteTrade">
	delete from community where community_seq = #{community_seq}
	</delete>
	
<!-- Trade 5. 거래 게시판 글수정  -->	
	<update id="updateTrade" parameterType="kr.baby.dao.CommunityVO">
	update Community set community_title=#{community_title},set community_content=#{community_content} 
	where community_seq = #{community_seq}
	</update>
	

<!-- Diary 1. 일기 게시판 전체 리스트  -->
	<select id = "listDiary" resultType = "kr.baby.dao.DiaryVO">
	select * from diary 
	order by diary_seq desc
	</select>

<!-- Diary 2. 일기 게시판 글쓰기  -->
	<insert id="insertDiary" parameterType="kr.baby.dao.DiaryVO">
	insert into diary(diary_seq,diary_title,diary_content,diary_date,diary_file,mem_id,mem_nick)
	values(diary_seq.nextval,#{diary_title},#{diary_content},sysdate,#{diary_file,jdbcType=VARCHAR},#{mem_id},#{mem_nick})
	</insert>
	

<!-- Diary 3. 일기 게시판 카운트업데이트  -->
	<update id="countDiary" parameterType="int">
	update diary set diary_cnt = diary_cnt+1 where diary_seq = #{diary_seq}
	</update>
	

	
<!-- Diary 4. 일기게시판 글삭제  -->	
	<delete id="deleteDiary">
	delete from diary where diary_seq=#{diary_seq}
	</delete>
	
<!-- Diary 5. 일기 게시판 글수정  -->	
	<update id="updateDiary" parameterType="kr.baby.dao.DiaryVO">
	update diary set 
	diary_title=#{diary_title},diary_content=#{diary_content},diary_file=#{diary_file,jdbcType=VARCHAR}
	where diary_seq = #{diary_seq}
	</update>

	
	<!--Diary 6. 일기 게시판 상세 페이지   -->
	<select id = "getDiary_seq" parameterType = "int" resultType="kr.baby.dao.DiaryVO">
	select * from diary where diary_seq=#{diary_seq}
	</select>
	
	<!-- Diary 7. 일기 게시판 댓글 등록 -->
	<insert id = "insertDiaryComment" parameterType="kr.baby.dao.DiaryCommentVO">
	insert into
	diary_comment(diary_cmt_seq,diary_seq,diary_cmt_content,diary_cmt_date,mem_id,mem_nick)
	values(diary_comments_seq.nextval,#{diary_seq},#{diary_cmt_content},sysdate,#{mem_id},#{mem_nick})
	</insert>
	<!-- Diary 8. 일기 게시판 댓글 목록 -->
	<select id = "ListDiaryComment" resultType="kr.baby.dao.DiaryCommentVO">
		select * from diary_comment
		order by diary_cmt_seq desc
	</select>
	
	<!-- Diary 9. 일기 게시판 댓글 삭제  -->
	<delete id="deleteDiaryComment">
	delete from diary_comment where diary_cmt_seq=#{diary_cmt_seq}
	</delete>
	
	<!-- Diary 10. 일기 게시판 댓글 수정 -->
	<update id = "updateDiaryComment" parameterType = "kr.baby.dao.DiaryCommentVO">
	update diary_comment set
	diary_cmt_content=#{diary_cmt_content}
	where diary_cmt_seq = #{diary_cmt_seq}
	</update>
	<!-- Diary11. 일기 게시판 댓글 번호  -->
	<select id = "getDiary_cmt_seq" parameterType="int" resultType="kr.baby.dao.DiaryCommentVO">
		select * from diary_comment where diary_cmt_seq = #{diary_cmt_seq}
	</select>
	
	
<!-- Diary 12. 일기 게시판 마이 리스트  -->
	<select id = "listMyDiary" resultType = "kr.baby.dao.DiaryVO">
	select * from diary where mem_id = 'hotkick@naver.com'
	order by diary_seq desc
	</select>
	
	
	<!-- Quesion 1. 질문 게시판 전체 리스트  -->
	<select id = "listQuestion" resultType = "kr.baby.dao.QuestionVO">
	select * from question
	order by q_seq desc
	</select>

<!-- Quesion 2. 질문 게시판 글쓰기  -->
	<insert id="insertQuestion" parameterType="kr.baby.dao.QuestionVO">
	insert into question(q_seq,q_title,q_content,q_date,q_file,mem_id)
	values(q_seq.nextval,#{q_title},#{q_content},sysdate,#{q_file,jdbcType=VARCHAR},#{mem_id})
	</insert>
	

<!-- Quesion 3. 질문 게시판 카운트업데이트  -->
	<update id="countQuestion" parameterType="int">
	update question set q_cnt = q_cnt+1 where q_seq = #{q_seq}
	</update>
	

	
<!-- Quesion 4. 질문 게시판 글삭제  -->	
	<delete id="deleteQuestion">
	delete from question where q_seq=#{q_seq}
	</delete>
	
<!-- Quesion 5. 질문 게시판 글수정  -->	
	<update id="updateQuestion" parameterType="kr.baby.dao.QuestionVO">
	update question set q_title=#{q_title},set q_content=#{q_content} where q_seq = #{q_seq}
	</update>
	
	<!--Quesion 6. 질문 게시판 상세 페이지   -->
	<select id = "getQ_seq" parameterType = "int" resultType="kr.baby.dao.QuestionVO">
	select * from question where q_seq=#{q_seq}
	</select>
	
	
	<!-- 안드로이드 로그인   -->
	<select id = "Login" resultType="kr.baby.dao.MemberVO" parameterType="kr.baby.dao.MemberVO">
	  select * from member 
	  where mem_id=#{id} and mem_pw=#{pw}
	</select>
	
	<select id = "getMember" resultType="kr.baby.dao.MemberVO">
	  select * from member where mem_id=#{mem_id} 
	</select>
	
	
</mapper>